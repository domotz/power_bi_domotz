{
    "basePath": "/public-api/v1/",
    "definitions": {
        "APIUsageInformation": {
            "description": "Information about Domotz API current usage and usage limits",
            "properties": {
                "by_ip": {
                    "items": {
                        "properties": {
                            "count": {
                                "description": "The number of calls originated from that IP address",
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The IP address",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "by_key": {
                    "items": {
                        "properties": {
                            "count": {
                                "description": "The number of calls done using this key in the last 24 hours",
                                "format": "int32",
                                "type": "integer"
                            },
                            "id": {
                                "description": "The ID of the API key",
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The mnemonic API key name",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "by_resource": {
                    "items": {
                        "properties": {
                            "count": {
                                "description": "The number of calls for the resource",
                                "format": "int32",
                                "type": "integer"
                            },
                            "name": {
                                "description": "The base resource name",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "concurrent_allowed": {
                    "description": "Number of allowed calls to the API in a minute.",
                    "format": "int32",
                    "type": "integer"
                },
                "daily_limit": {
                    "description": "Number of allowed calls to the API in a 24 hours span.",
                    "format": "int32",
                    "type": "integer"
                },
                "daily_usage": {
                    "description": "Number of API call performed in the last 24 hours. ",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "AbstractDevice": {
            "description": "Base abstract class for all devices",
            "properties": {
                "authentication_status": {
                    "description": "When defined the device requires authentication info to perform extended discovery <ul>\n<li>\n*REQUIRED*: the device requires authentication, extended discovery is locked\n</li><li>\n*PENDING*: credentials have been submitted but not verified yet\n</li><li>\n*WRONG_CREDENTIALS*: device authentication failed\n</li><li>\n*AUTHENTICATED*: device authentication succeeded\n</li></ul>\n",
                    "enum": [
                        "AUTHENTICATED",
                        "NO_AUTHENTICATION",
                        "PENDING",
                        "REQUIRED",
                        "WRONG_CREDENTIALS"
                    ],
                    "type": "string"
                },
                "details": {
                    "description": "DeviceDetails",
                    "properties": {
                        "firmware_version": {
                            "type": "string"
                        },
                        "room": {
                            "type": "string"
                        },
                        "snmp_read_community": {
                            "description": "Deprecated. Please use <a href='#getsnmpauthentication'> getSNMPAuthentication </a>",
                            "type": "string"
                        },
                        "snmp_write_community": {
                            "description": "Deprecated. Please use <a href='#getsnmpauthentication'> getSNMPAuthentication </a>",
                            "type": "string"
                        },
                        "zone": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "display_name": {
                    "type": "string"
                },
                "first_seen_on": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "importance": {
                    "enum": [
                        "VITAL",
                        "FLOATING"
                    ],
                    "type": "string"
                },
                "main_id": {
                    "description": "In a clustered configuration, the main device id",
                    "format": "int32",
                    "type": "integer"
                },
                "os": {
                    "description": "DeviceOS",
                    "properties": {
                        "build": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "version": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "protocol": {
                    "enum": [
                        "IP",
                        "DUMMY",
                        "IP_EXTERNAL"
                    ],
                    "type": "string"
                },
                "type": {
                    "description": "The device type, if recognised by domotz",
                    "properties": {
                        "detected_id": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "id": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "label": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "user_data": {
                    "properties": {
                        "model": {
                            "maxLength": 100,
                            "type": "string"
                        },
                        "name": {
                            "maxLength": 64,
                            "type": "string"
                        },
                        "type": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "vendor": {
                            "maxLength": 100,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "display_name",
                "id",
                "protocol"
            ],
            "type": "object"
        },
        "AgentBase": {
            "properties": {
                "access_right": {
                    "properties": {
                        "api_enabled": {
                            "description": "If `false` the agent plan doesn't allow for API access: you only can see this agent in the list",
                            "type": "boolean"
                        },
                        "granting_user": {
                            "properties": {
                                "name": {
                                    "format": "email",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "status": {
                            "description": "<ul><li>\n*OWNED*: you own this agent\n</li><li>\n*PROPOSED*: the owner proposed you to access the agent, you can accept or reject the offer\n</li><li>\n*GRANTED*: you accepted the collaboration request for this agent\n</li><li>\n*ASSIGNED*: your team leader has given you access to the agent\n</li></ul>",
                            "enum": [
                                "OWNED",
                                "GRANTED",
                                "PROPOSED",
                                "ASSIGNED"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "creation_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "licence": {
                    "properties": {
                        "activation_time": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "bound_mac_address": {
                            "description": "The MAC address of the primary interface of the device the software agent runs on",
                            "type": "string"
                        },
                        "code": {
                            "type": "string"
                        },
                        "expiration_time": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "id": {
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "location": {
                    "properties": {
                        "latitude": {
                            "pattern": "^-?\\d+(\\.\\d{4})?$",
                            "type": "string"
                        },
                        "longitude": {
                            "pattern": "^-?\\d+(\\.\\d{4})?$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "status": {
                    "properties": {
                        "last_change": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "value": {
                            "enum": [
                                "ONLINE",
                                "OFFLINE"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "team": {
                    "description": "The Team and Company Area information, only available for companies",
                    "properties": {
                        "area": {
                            "properties": {
                                "id": {
                                    "format": "int32",
                                    "type": "integer"
                                }
                            },
                            "type": "object"
                        },
                        "id": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "leader_id": {
                            "format": "int32",
                            "type": "integer"
                        },
                        "name": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "timezone": {
                    "type": "string"
                },
                "version": {
                    "properties": {
                        "agent": {
                            "type": "string"
                        },
                        "package": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "display_name",
                "id"
            ],
            "type": "object"
        },
        "AgentDetail": {
            "allOf": [
                {
                    "$ref": "#/definitions/AgentBase"
                },
                {
                    "properties": {
                        "listen_on": {
                            "description": "The local IP and port the Domotz Agent software is listening on if online - the last known value otherwise",
                            "type": "string"
                        },
                        "location": {
                            "properties": {
                                "latitude": {
                                    "pattern": "^-?\\d+(\\.\\d{4})?$",
                                    "type": "string"
                                },
                                "longitude": {
                                    "pattern": "^-?\\d+(\\.\\d{4})?$",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "AgentHistory": {
            "properties": {
                "timestamp": {
                    "description": "The time the sample was reported to Domotz",
                    "format": "date-time",
                    "type": "string"
                },
                "type": {
                    "description": "The agent event type",
                    "enum": [
                        "CONNECTION_RECOVERED",
                        "CONNECTION_LOST",
                        "UP",
                        "DOWN"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "timestamp",
                "type"
            ],
            "type": "object"
        },
        "AgentIPScanPolicy": {
            "properties": {
                "forced_ip_addresses": {
                    "description": "The list of IP addresses always checked by the agent. By default the list is empty and the agent performs hosts discovery automatically. The addresses must be expressed in dotted decimal notation and must belong to private networks (see <a href='https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml/'>iana-ipv4-special-registry</a>)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "forced_ip_addresses"
            ],
            "type": "object"
        },
        "AgentInterfacesPolicy": {
            "properties": {
                "policy": {
                    "enum": [
                        "allow",
                        "deny"
                    ],
                    "type": "string"
                },
                "rules": {
                    "description": "Rules can be expressed as lists of case-insensitive strings representing the names of the interfaces to be matched. The `*` wildcard can be used to match variable parts of the interface name. Example: `[\"eth*\", \"tun0\"]`",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "policy",
                "rules"
            ],
            "type": "object"
        },
        "AgentUptime": {
            "properties": {
                "agent_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "downtime_intervals": {
                    "items": {
                        "properties": {
                            "end": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "start": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "online_seconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_seconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "uptime": {
                    "description": "The uptime percentage of the agent",
                    "type": "string"
                }
            },
            "required": [
                "agent_id",
                "online_seconds",
                "total_seconds",
                "uptime"
            ],
            "type": "object"
        },
        "AgentVPNActiveConnection": {
            "properties": {
                "bytes": {
                    "description": "Current VPN connection consumption (bytes) ",
                    "format": "int32",
                    "type": "integer"
                },
                "creation_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "expiration_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "The ID of the VPN connection",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The user that started the VPN connection",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the vpn connection",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "EXPIRED"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "bytes",
                "creation_time",
                "expiration_time",
                "id",
                "name",
                "status"
            ],
            "type": "object"
        },
        "AgentVPNConnection": {
            "properties": {
                "allowed_ip": {
                    "description": "The only public IP address allowed to access the connection.\n        It will be impossible to use the connection from other IP addresses. You should use your public IP address. \n",
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                    "type": "string"
                },
                "routing_policy": {
                    "description": "The traffic routing policy for the VPN connection: \n</br>- *global*: All the traffic is routed through the VPN On Demand. More consumption on the Domotz Cloud\n</br>- *local*: Only LAN traffic passes through the VPN On Demand. Less consumption on the Domotz Cloud\n",
                    "enum": [
                        "global",
                        "local"
                    ],
                    "type": "string"
                },
                "ttl_hours": {
                    "default": 1,
                    "description": "The duration in hours of the connection.",
                    "format": "int32",
                    "maximum": 24,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "allowed_ip",
                "routing_policy"
            ],
            "type": "object"
        },
        "AlertProfile": {
            "properties": {
                "description": {
                    "description": "The description of the alert profile",
                    "type": "string"
                },
                "events": {
                    "description": "The list of events associated to the profile",
                    "items": {
                        "enum": [
                            "device_status_up",
                            "device_status_down",
                            "device_heartbeat_lost",
                            "device_ip_change",
                            "device_snmp",
                            "device_tcp",
                            "device_rtd",
                            "device_configuration_change",
                            "device_configuration_misalignment",
                            "agent_feature_discovery",
                            "agent_status_up",
                            "agent_status_down",
                            "agent_speed_test",
                            "agent_device_discovery",
                            "agent_security_issue",
                            "agent_wan_change",
                            "agent_lan_change"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The id of the event profile",
                    "format": "int32",
                    "type": "integer"
                },
                "is_enabled": {
                    "description": "true if the event profile is enabled, false otherwise",
                    "type": "boolean"
                },
                "name": {
                    "description": "The symbolic name associated to the profile",
                    "type": "string"
                },
                "tag": {
                    "description": "A label associated to the profile",
                    "type": "string"
                }
            },
            "required": [
                "id"
            ],
            "type": "object"
        },
        "AlertProfileAgentBinding": {
            "properties": {
                "alert_profile_id": {
                    "description": "The id of the alert profile",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "alert_profile_id"
            ],
            "type": "object"
        },
        "AlertProfileDeviceBinding": {
            "properties": {
                "alert_profile_id": {
                    "description": "The id of the alert profile",
                    "format": "int32",
                    "type": "integer"
                },
                "device_id": {
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "alert_profile_id",
                "device_id"
            ],
            "type": "object"
        },
        "AllAgentInterfaces": {
            "properties": {
                "attached": {
                    "items": {
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "mac_address": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "netmask": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "routed": {
                    "items": {
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "netmask": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "attached",
                "routed"
            ],
            "type": "object"
        },
        "Area": {
            "description": "Represents an area of the Company",
            "properties": {
                "id": {
                    "description": "The identifier of the Area",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the Area",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name"
            ],
            "type": "object"
        },
        "ConnectionConsumption": {
            "properties": {
                "current": {
                    "description": "Current connection consumption (bytes) ",
                    "format": "int32",
                    "type": "integer"
                },
                "limit": {
                    "description": "Maximum connection consumption (bytes) ",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "current",
                "limit"
            ],
            "type": "object"
        },
        "ConnectionSession": {
            "properties": {
                "allowed_ip": {
                    "description": "The only public IP address allowed to access the connection.\n        It will be impossible to use the connection from other IP addresses. You should use your public IP address. \n",
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                    "type": "string"
                },
                "expiration": {
                    "description": "The time after which the connection will be closed",
                    "format": "date-time",
                    "type": "string"
                },
                "id": {
                    "description": "The unique identifier of the `connection`",
                    "format": "int32",
                    "type": "integer"
                },
                "link": {
                    "description": "Either the link to access the device's HTTP(s) interface in the browser or the host/port coordinates of the proxied TCP port, depending on the protocol (see protocol description in the request)",
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                },
                "protocol": {
                    "description": "The protocol wrapped by the connection:\n\n</br>- *http/https*: the `link` field in the reply will contain an `https` URL. A browser or a similar user agent must be used:\nthe client must have cookies enabled and the capability of following 302 redirects. If the protocol is `https` the\ndevice's certificate will be accepted without checks and its information ignored (our server will act as a proxy).\n</br>- *tcp*: the `link` field will be in the form `tcp://{host}:{port}`. Any connection established (e.g. with `telnet`\n or `ssh`) on these coordinates will be securely forwarded to the requested `port` of the device.\n </br>- *ssh*: the `link` field will  contain an `https` URL. A browser or a similar user agent must be used:\nthe client must have cookies enabled and the capability of following 302 redirects.\n</br>- *rdp*: the `link` field will  contain an `https` URL. A browser or a similar user agent must be used:\nthe client must have cookies enabled and the capability of following 302 redirects.\n ",
                    "enum": [
                        "http",
                        "https",
                        "tcp",
                        "ssh",
                        "rdp"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "allowed_ip",
                "id",
                "port",
                "protocol"
            ],
            "type": "object"
        },
        "DetectedDeviceType": {
            "description": "A device type, detected by the Domotz device identification feature",
            "properties": {
                "capabilities": {
                    "description": "The features of the device",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "id": {
                    "description": "An unique identifier of the type, referred in the `Device` entity",
                    "format": "int32",
                    "type": "integer"
                },
                "identifier": {
                    "description": "The name of the type",
                    "type": "string"
                },
                "label": {
                    "description": "A human-readable short description of the type",
                    "type": "string"
                },
                "type_id": {
                    "description": "The corresponding `device type` ",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "DeviceApplicationField": {
            "description": "The list of applications of a device",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "first_time_seen": {
                    "format": "date-time",
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "install_date": {
                    "format": "date-time",
                    "type": "string"
                },
                "install_location": {
                    "type": "string"
                },
                "last_modified": {
                    "format": "date-time",
                    "type": "string"
                },
                "last_update": {
                    "format": "date-time",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "publisher": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "application_id",
                "first_time_seen"
            ],
            "type": "object"
        },
        "DeviceBaseType": {
            "description": "A device type, either set by the user or as identified by the Domotz system",
            "properties": {
                "id": {
                    "description": "An unique identifier of the type, referred in the `Device` entity",
                    "format": "int32",
                    "type": "integer"
                },
                "identifier": {
                    "description": "The name of the type",
                    "type": "string"
                },
                "label": {
                    "description": "A human-readable short description of the type   ",
                    "type": "string"
                },
                "vital": {
                    "description": "Whether a device of this type will be marked as `VITAL` as soon as recognised",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DeviceConnection": {
            "properties": {
                "allowed_ip": {
                    "description": "The only public IP address allowed to access the connection.\n        It will be impossible to use the connection from other IP addresses. You should use your public IP address. \n",
                    "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                    "type": "string"
                },
                "port": {
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 0,
                    "type": "integer"
                },
                "protocol": {
                    "description": "The protocol wrapped by the connection:\n\n</br>- *http/https*: the `link` field in the reply will contain an `https` URL. A browser or a similar user agent must be used:\nthe client must have cookies enabled and the capability of following 302 redirects. If the protocol is `https` the\ndevice's certificate will be accepted without checks and its information ignored (our server will act as a proxy).\n</br>- *tcp*: the `link` field will be in the form `tcp://{host}:{port}`. Any connection established (e.g. with `telnet`\n or `ssh`) on these coordinates will be securely forwarded to the requested `port` of the device.\n </br>- *ssh*: the `link` field will  contain an `https` URL. A browser or a similar user agent must be used:\nthe client must have cookies enabled and the capability of following 302 redirects.\n</br>- *rdp*: the `link` field will  contain an `https` URL. A browser or a similar user agent must be used:\nthe client must have cookies enabled and the capability of following 302 redirects.\n ",
                    "enum": [
                        "http",
                        "https",
                        "tcp",
                        "ssh",
                        "rdp"
                    ],
                    "type": "string"
                },
                "ttl_hours": {
                    "default": 1,
                    "description": "The duration in hours of the connection.",
                    "format": "int32",
                    "maximum": 24,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "allowed_ip",
                "port",
                "protocol"
            ],
            "type": "object"
        },
        "DeviceCredentials": {
            "properties": {
                "password": {
                    "description": "password",
                    "type": "string"
                },
                "username": {
                    "description": "username",
                    "type": "string"
                }
            },
            "required": [
                "password",
                "username"
            ],
            "type": "object"
        },
        "DeviceEyeSNMPHistorySample": {
            "properties": {
                "enum_value": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "The time the sample was reported to Domotz",
                    "format": "date-time",
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "timestamp",
                "value"
            ],
            "type": "object"
        },
        "DeviceHistory": {
            "properties": {
                "details": {
                    "properties": {
                        "new_ip": {
                            "description": "The new IP addresses",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "old_ip": {
                            "description": "The old IP addresses",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "timestamp": {
                    "description": "The time the sample was reported to Domotz",
                    "format": "date-time",
                    "type": "string"
                },
                "type": {
                    "description": "The device event type",
                    "enum": [
                        "IP_CHANGE",
                        "CREATED",
                        "UP",
                        "DOWN"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "timestamp",
                "type"
            ],
            "type": "object"
        },
        "DeviceInventoryField": {
            "description": "A device inventory field",
            "properties": {
                "creation_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "key": {
                    "description": "The name of the field, unique in the Inventory",
                    "maxLength": 25,
                    "minLength": 1,
                    "pattern": "/^[a-z][a-z0-9_-]{0,24}]$/",
                    "type": "string"
                },
                "value": {
                    "maxLength": 255,
                    "type": "string"
                }
            },
            "required": [
                "key",
                "value"
            ],
            "type": "object"
        },
        "DevicePowerAction": {
            "properties": {
                "cycle": {
                    "description": "Indicates that a power cycle on the device is possible. Available if the device is connected to just one PDU.",
                    "type": "boolean"
                },
                "off": {
                    "description": "Indicates that the device can be powered off. Available if the device is connected to one or more PDU. <br><br> In the latter case the operation will be performed on all available PDUs.<br><br> If there no PDU but there is one POE connection, the operation will still be available through that connection.<br><br>",
                    "type": "boolean"
                },
                "on": {
                    "description": "Indicates that the device can be powered on. Available if the device is connected to one or more PDU. <br><br> In the latter case the operation will be performed on all available PDUs.<br><br> If there is no PDU but there is one POE connection, the operation will still available through that connection.",
                    "type": "boolean"
                },
                "software_reboot": {
                    "description": "Indicates that software reboot on the device is possible.<br><br> The operation availability depends on the device.",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "DeviceRTDHistorySample": {
            "properties": {
                "lost_packet_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "max": {
                    "pattern": "^-?\\d+(\\.\\d{1})?$",
                    "type": "string"
                },
                "median": {
                    "pattern": "^-?\\d+(\\.\\d{1})?$",
                    "type": "string"
                },
                "min": {
                    "pattern": "^-?\\d+(\\.\\d{1})?$",
                    "type": "string"
                },
                "sent_packet_count": {
                    "format": "int32",
                    "type": "integer"
                },
                "timestamp": {
                    "description": "The time the sample was reported to Domotz",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "timestamp"
            ],
            "type": "object"
        },
        "DeviceRTDStatistics": {
            "properties": {
                "avg_max": {
                    "pattern": "^-?\\d+(\\.\\d{1})?$",
                    "type": "string"
                },
                "avg_median": {
                    "pattern": "^-?\\d+(\\.\\d{1})?$",
                    "type": "string"
                },
                "avg_min": {
                    "pattern": "^-?\\d+(\\.\\d{1})?$",
                    "type": "string"
                },
                "device_id": {
                    "format": "int32",
                    "type": "integer"
                },
                "latest_lost_packet_count": {
                    "description": "The number of lost packets of the latest collection sample",
                    "format": "int32",
                    "type": "integer"
                },
                "latest_median": {
                    "description": "The median value of the latest collection sample",
                    "pattern": "^-?\\d+(\\.\\d{1})?$",
                    "type": "string"
                },
                "latest_sent_packet_count": {
                    "description": "The number of sent packets of the latest collection sample",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "device_id",
                "timestamp"
            ],
            "type": "object"
        },
        "DeviceSnmpCommunity": {
            "properties": {
                "read": {
                    "description": "Defines new read snmp community",
                    "type": "string"
                },
                "write": {
                    "description": "Defines new write snmp community (defaults to read community if not used)",
                    "type": "string"
                }
            },
            "required": [
                "read"
            ],
            "type": "object"
        },
        "DeviceUptime": {
            "properties": {
                "agent_uptime": {
                    "description": "The uptime percentage of the agent",
                    "type": "string"
                },
                "downtime_intervals": {
                    "items": {
                        "properties": {
                            "end": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "start": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "online_seconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "total_seconds": {
                    "format": "int32",
                    "type": "integer"
                },
                "uptime": {
                    "description": "The uptime percentage of the device",
                    "type": "string"
                }
            },
            "required": [
                "agent_uptime",
                "online_seconds",
                "total_seconds",
                "uptime"
            ],
            "type": "object"
        },
        "DeviceVariable": {
            "description": "The representation of a device variable",
            "properties": {
                "creation_time": {
                    "description": "The creation time of the variable",
                    "format": "date-time",
                    "type": "string"
                },
                "has_history": {
                    "description": "If true the history of the variable can be retrieved with <a href='#getvariablehistory'> getVariableHistory</a>",
                    "type": "boolean"
                },
                "id": {
                    "description": "The ID of the variable",
                    "format": "int32",
                    "type": "integer"
                },
                "label": {
                    "description": "The label",
                    "type": "string"
                },
                "path": {
                    "description": "The variable path",
                    "type": "string"
                },
                "unit": {
                    "description": "The unit of measurement",
                    "type": "string"
                },
                "value": {
                    "description": "The variable value",
                    "type": "string"
                },
                "value_update_time": {
                    "description": "The update time of the variable value",
                    "format": "date-time",
                    "type": "string"
                }
            },
            "required": [
                "has_history",
                "id",
                "path"
            ],
            "type": "object"
        },
        "DomotzEyesUsageInformation": {
            "description": "Information about Domotz Sensors current usage and limits",
            "properties": {
                "limit": {
                    "description": "Number of allowed Domotz Sensors for the agent",
                    "format": "int32",
                    "type": "integer"
                },
                "usage": {
                    "properties": {
                        "snmp": {
                            "description": "Number of configured Domotz Sensors of type `snmp` on the agent.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "tcp": {
                            "description": "Number of configured Domotz Sensors of type `tcp` on the agent.",
                            "format": "int32",
                            "type": "integer"
                        },
                        "total": {
                            "description": "Number of configured Domotz Sensors on the agent.",
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "DummyDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractDevice"
                },
                {
                    "description": "A device that has no network access whatsoever and cannot be discovered or interacted with by\n     the agent.\n \n A user can create a Dummy Device to attach it to a power outlet so that it is easier to remember which port controls\nthe device",
                    "properties": {},
                    "type": "object"
                }
            ]
        },
        "ExternalIpDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/IpDevice"
                },
                {
                    "description": "A device added by the means of 'Advanced Monitoring': it is an IP device manually added by \nthe user, no discoveries are done over it, just periodical ping to see whether it is reachable",
                    "properties": {
                        "names": {
                            "properties": {
                                "host": {
                                    "type": "string"
                                },
                                "inspection": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "InventoryField": {
            "allOf": [
                {
                    "$ref": "#/definitions/WriteInventoryField"
                },
                {
                    "description": "DTO Returned by the API describing an Inventory Field",
                    "properties": {
                        "creation_time": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "defined_by_user": {
                            "description": "The `id` of the user that defined the inventory field - if different from your id, this field can't be deleted or changed",
                            "format": "int32",
                            "type": "integer"
                        },
                        "key": {
                            "description": "The name of the field, unique in the Inventory",
                            "maxLength": 25,
                            "minLength": 1,
                            "pattern": "/^[a-z][a-z0-9_-]{0,24}]$/",
                            "type": "string"
                        }
                    },
                    "required": [
                        "key"
                    ],
                    "type": "object"
                }
            ]
        },
        "IpDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/AbstractDevice"
                },
                {
                    "description": "Base abstract class for all IP devices",
                    "properties": {
                        "agent_reachable": {
                            "description": "When `true` the device is reachable by the agent over an IP network.\nWhen `false` Domotz knows about the status of the device by the means of another source e.g. a third party controller.\n\nThis field is significant only when the status of the device is `ONLINE` and its value is `false` because it means\nthat even if the IP device is up and running, many features aren't allowed, such as the direct connection or the TCP\nservices monitoring.",
                            "type": "boolean"
                        },
                        "grace_period": {
                            "description": "The number of seconds a device must be unreachable before being declared DOWN",
                            "format": "int32",
                            "type": "integer"
                        },
                        "ip_addresses": {
                            "items": {
                                "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "last_status_change": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "model": {
                            "maxLength": 255,
                            "type": "string"
                        },
                        "open_ports": {
                            "description": "The list of TCP and UDP open ports. Domotz scans a subset of all the ports, visit the <a href='https://help.domotz.com/user-guide/device-tcp-udp-ports-services-discovery/'>user guide</a> for more details.",
                            "properties": {
                                "tcp": {
                                    "items": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "type": "array"
                                },
                                "udp": {
                                    "items": {
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "status": {
                            "enum": [
                                "ONLINE",
                                "OFFLINE",
                                "DOWN",
                                "HIDDEN"
                            ],
                            "type": "string"
                        },
                        "vendor": {
                            "maxLength": 100,
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "LocalIpDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/IpDevice"
                },
                {
                    "description": "Standard device, automatically discovered in the local IP network of the agent.",
                    "properties": {
                        "hw_address": {
                            "description": "MAC Address",
                            "type": "string"
                        },
                        "is_jammed": {
                            "description": "When true, the Domotz Agent is blocking the device to access the Internet. The device can still reach every other device in the local network",
                            "type": "boolean"
                        },
                        "names": {
                            "properties": {
                                "bonjour": {
                                    "type": "string"
                                },
                                "dhcp": {
                                    "type": "string"
                                },
                                "host": {
                                    "type": "string"
                                },
                                "inspection": {
                                    "type": "string"
                                },
                                "netbios": {
                                    "type": "string"
                                },
                                "snmp": {
                                    "type": "string"
                                },
                                "upnp": {
                                    "type": "string"
                                },
                                "zeroconf": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "NetworkSpeedSample": {
            "description": "A Network Speed Sample is the result of the measurement of the Internet download and upload\n     speed, in bits per second, taken by the Agent",
            "properties": {
                "timestamp": {
                    "description": "The time the sample was reported to Domotz",
                    "format": "date-time",
                    "type": "string"
                },
                "values": {
                    "description": "A pair of values: the download and upload speed, in Bit Per Seconds (bps), as measured by the Agent",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "NetworkTopology": {
            "properties": {
                "edges": {
                    "description": "The list of edges. Each item contains the IDs of the connected devices.",
                    "items": {
                        "properties": {
                            "from": {
                                "format": "int32",
                                "type": "integer"
                            },
                            "to": {
                                "format": "int32",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "from",
                            "to"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "edges"
            ],
            "type": "object"
        },
        "SNMPDomotzAgentEye": {
            "description": "Information about a configured SNMP Domotz Sensor",
            "properties": {
                "category": {
                    "description": "The category of the OID",
                    "enum": [
                        "OTHER",
                        "CONSUMABLE",
                        "CPU",
                        "DISK_SPACE",
                        "MEMORY",
                        "NETWORK_TRAFFIC",
                        "TEMPERATURE"
                    ],
                    "type": "string"
                },
                "device_id": {
                    "description": "The unique identifier of the device",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "The ID of the SNMP Domotz Sensor",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the Domotz Sensors",
                    "type": "string"
                },
                "oid": {
                    "description": "The OID string",
                    "type": "string"
                },
                "value_type": {
                    "description": "The type of the OID",
                    "enum": [
                        "STRING",
                        "NUMERIC",
                        "ENUM"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "category",
                "id",
                "name",
                "oid",
                "value_type"
            ],
            "type": "object"
        },
        "SNMPDomotzAuthentication": {
            "description": "The SNMP authentication setting of a device",
            "properties": {
                "authentication_key": {
                    "type": "string"
                },
                "authentication_protocol": {
                    "description": "The SNMP authentication protocol",
                    "enum": [
                        "MD5",
                        "SHA"
                    ],
                    "type": "string"
                },
                "encryption_key": {
                    "type": "string"
                },
                "encryption_protocol": {
                    "description": "The SNMP encryption protocol",
                    "enum": [
                        "DES",
                        "AES"
                    ],
                    "type": "string"
                },
                "snmp_read_community": {
                    "type": "string"
                },
                "snmp_write_community": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "version": {
                    "description": "The configured SNMP version",
                    "enum": [
                        "V2",
                        "V1",
                        "V3_AUTH_PRIV",
                        "V3_NO_AUTH",
                        "V3_AUTH_NO_PRIV"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "version"
            ],
            "type": "object"
        },
        "SNMPDomotzEye": {
            "description": "Information about a configured SNMP Domotz Sensor",
            "properties": {
                "category": {
                    "description": "The category of the OID",
                    "enum": [
                        "OTHER",
                        "CONSUMABLE",
                        "CPU",
                        "DISK_SPACE",
                        "MEMORY",
                        "NETWORK_TRAFFIC",
                        "TEMPERATURE"
                    ],
                    "type": "string"
                },
                "device_id": {
                    "description": "The unique identifier of the device",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "The ID of the SNMP Domotz Sensor",
                    "format": "int32",
                    "type": "integer"
                },
                "last_update": {
                    "description": "The timestamp of the latest update",
                    "format": "date-time",
                    "type": "string"
                },
                "latest_enum_value": {
                    "description": "The enum value retrieved on the OID",
                    "type": "string"
                },
                "latest_value": {
                    "description": "The value retrieved on the OID",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the Domotz Sensors",
                    "type": "string"
                },
                "oid": {
                    "description": "The OID string",
                    "type": "string"
                },
                "value_type": {
                    "description": "The type of the OID",
                    "enum": [
                        "STRING",
                        "NUMERIC",
                        "ENUM"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "category",
                "id",
                "last_update",
                "latest_value",
                "name",
                "oid",
                "value_type"
            ],
            "type": "object"
        },
        "SNMPDomotzEyeCreation": {
            "description": "SNMP Domotz Sensor Data",
            "properties": {
                "category": {
                    "description": "The category of the OID",
                    "enum": [
                        "OTHER",
                        "CONSUMABLE",
                        "CPU",
                        "DISK_SPACE",
                        "MEMORY",
                        "NETWORK_TRAFFIC",
                        "TEMPERATURE"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "The name of the Domotz Sensors",
                    "type": "string"
                },
                "oid": {
                    "description": "The OID string",
                    "type": "string"
                },
                "value_type": {
                    "description": "The type of the OID",
                    "enum": [
                        "STRING",
                        "NUMERIC",
                        "ENUM"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "category",
                "name",
                "oid",
                "value_type"
            ],
            "type": "object"
        },
        "SNMPDomotzEyeTrigger": {
            "description": "Information about a trigger",
            "properties": {
                "alert": {
                    "description": "The alerts details",
                    "properties": {
                        "email": {
                            "description": "True if the email alert is active",
                            "type": "boolean"
                        },
                        "mobile": {
                            "description": "True if the mobile alert is active",
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                },
                "creation_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "function_id": {
                    "description": "The unique identifier of the function assigned to the trigger",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "The unique identifier of the SNMP Trigger",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the trigger",
                    "type": "string"
                },
                "operands": {
                    "description": "The operands for the function",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "function_id",
                "id",
                "name",
                "operands"
            ],
            "type": "object"
        },
        "SNMPDomotzEyeTriggerFunction": {
            "description": "Information about a trigger function",
            "properties": {
                "cardinality": {
                    "description": "The number of arguments of the function",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "The unique identifier of the SNMP Trigger function",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the function",
                    "type": "string"
                },
                "value_types": {
                    "description": "The type of the operands",
                    "enum": [
                        "STRING",
                        "NUMERIC",
                        "ENUM"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "cardinality",
                "id",
                "name",
                "value_types"
            ],
            "type": "object"
        },
        "SNMPDomotzSnmpTriggerAlertCreation": {
            "description": "SNMP Trigger Alert",
            "properties": {},
            "type": "object"
        },
        "SNMPDomotzSnmpTriggerCreation": {
            "description": "SNMP Trigger",
            "properties": {
                "function_id": {
                    "description": "The unique identifier of the sensor function",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the trigger",
                    "type": "string"
                },
                "operands": {
                    "description": "The operands for the function",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "function_id",
                "name",
                "operands"
            ],
            "type": "object"
        },
        "SubnetIpDevice": {
            "allOf": [
                {
                    "$ref": "#/definitions/IpDevice"
                },
                {
                    "description": "A device automatically discovered by the agent that exists in an IP subnet defined by the user.\n The agent reaches the device through a Level 3 switch or similar device, so it cannot get the MAC address or other \nlevel 2 information, such as DHCP lease data    \n    ",
                    "properties": {
                        "names": {
                            "properties": {
                                "bonjour": {
                                    "type": "string"
                                },
                                "host": {
                                    "type": "string"
                                },
                                "inspection": {
                                    "type": "string"
                                },
                                "snmp": {
                                    "type": "string"
                                },
                                "upnp": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            ]
        },
        "TCPDomotzEye": {
            "description": "Information about a configured TCP Domotz Sensor",
            "properties": {
                "device_id": {
                    "description": "The unique identifier of the device",
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "description": "The ID of the TCP Domotz Sensor",
                    "format": "int32",
                    "type": "integer"
                },
                "last_update": {
                    "description": "The timestamp of the latest update",
                    "format": "date-time",
                    "type": "string"
                },
                "port": {
                    "description": "The port number",
                    "format": "int32",
                    "type": "integer"
                },
                "status": {
                    "description": "The status of the TCP service",
                    "enum": [
                        "UP",
                        "DOWN"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "id",
                "last_update",
                "port",
                "status"
            ],
            "type": "object"
        },
        "TCPDomotzEyeCreation": {
            "description": "TCP Domotz Sensor Data",
            "properties": {
                "port": {
                    "description": "The port number",
                    "format": "int32",
                    "type": "integer"
                }
            },
            "required": [
                "port"
            ],
            "type": "object"
        },
        "Team": {
            "description": "Represents a team of the Company",
            "properties": {
                "id": {
                    "description": "The identifier of the Team",
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "description": "The name of the Team",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "name"
            ],
            "type": "object"
        },
        "TeamCreation": {
            "description": "Team Creation under specified Area",
            "properties": {
                "leader": {
                    "description": "The Team Leader",
                    "properties": {
                        "details": {
                            "description": "The Team Leader's details",
                            "properties": {
                                "display_name": {
                                    "description": "The Team Leader's display name",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "display_name"
                            ],
                            "type": "object"
                        },
                        "name": {
                            "description": "The Team Leader's name",
                            "type": "string"
                        },
                        "password": {
                            "description": "The Team Leader's password",
                            "type": "string"
                        }
                    },
                    "required": [
                        "details",
                        "name",
                        "password"
                    ],
                    "type": "object"
                },
                "name": {
                    "description": "The Team's name",
                    "type": "string"
                }
            },
            "required": [
                "leader",
                "name"
            ],
            "type": "object"
        },
        "User": {
            "properties": {
                "id": {
                    "format": "int32",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "VariableHistorySample": {
            "properties": {
                "timestamp": {
                    "description": "The time the sample was reported to Domotz",
                    "format": "date-time",
                    "type": "string"
                },
                "value": {
                    "description": "The sample value",
                    "type": "string"
                }
            },
            "required": [
                "timestamp",
                "value"
            ],
            "type": "object"
        },
        "WriteInventoryField": {
            "description": "DTO Used for creating/updating Inventory fields",
            "properties": {
                "label": {
                    "description": "A detailed description of the field, for documentation",
                    "maxLength": 100,
                    "type": "string"
                }
            },
            "required": [
                "label"
            ],
            "type": "object"
        }
    },
    "info": {
        "contact": {
            "email": "support@domotz.com",
            "name": "API Support",
            "url": "https://www.domotz.com/"
        },
        "description": "### The Domotz Public API\n\nUse the \"API Key Endpoint\" which you can retrieve from the Domotz Portal as the Base URL for your API calls.\n\nThe Domotz Public API uses standard HTTP response codes, authentication, and verbs. JSON format is used in responses and accepted for request bodies. All date-time formats are expressed as yyyy-mm-ddThh:mm:ss. Date-time must be expressed in UTC. Specification of different TimeZones are not allowed.\n\n### Domotz Webhook\nIt is possible to subscribe to events happening on the Domotz platform, both at an Agent level and Device level, through the usage of Webhooks.\n\nPlease refer to the [user-guide](https://help.domotz.com/user-guide/shared-alerts-webhooks-ticketing-systems/) on the usage of the Webhook as a possible contact channel to receive notification of events and how to create a Shared Alert Profile. Moreover, refer to [getAlertProfiles](#getalertprofiles), [bindAlertProfileToAgent](#bindalertprofiletoagent) and [bindAlertProfileToDevice](#bindalertprofiletodevice) on how to retrieve the list of Shared Alert Profiles and bind to Agents and Devices respectively. In those same sections you also have the list of all the possible Webhook events and references to the Schemas.\n",
        "termsOfService": "https://www.domotz.com/terms-and-conditions/",
        "title": "Domotz Public API",
        "version": "1.8.0"
    },
    "paths": {
        "/agent": {
            "get": {
                "operationId": "listAgents",
                "parameters": [
                    {
                        "default": 10,
                        "description": "The maximum number of items to return. Min value is 1. Max value is 100. Default value is 10",
                        "format": "int32",
                        "in": "query",
                        "maximum": 100,
                        "minimum": 1,
                        "name": "page_size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The requested page number, 0-indexed. Default value is 0",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "page_number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Consider only agents with `display_name` containing the string (case insensitive)",
                        "in": "query",
                        "name": "display_name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filters by team name (companies only)",
                        "in": "query",
                        "name": "team_name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The agent list",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgentBase"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the agents list",
                "tags": [
                    "agent"
                ]
            },
            "head": {
                "operationId": "countAgents",
                "parameters": [
                    {
                        "description": "Consider only agents with `display_name` containing the string (case insensitive)",
                        "in": "query",
                        "name": "display_name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filters by team name (companies only)",
                        "in": "query",
                        "name": "team_name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The number of agents matching the filtering criteria",
                        "headers": {
                            "X-Entities-Count": {
                                "description": "The number of agents matching the filtering criteria",
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "summary": "Counts the agents",
                "tags": [
                    "agent"
                ]
            }
        },
        "/agent/uptime": {
            "get": {
                "operationId": "getAgentListUptime",
                "parameters": [
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The uptime of the agents",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgentUptime"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the uptime of all agents",
                "tags": [
                    "metrics"
                ]
            }
        },
        "/agent/{agent_id}": {
            "get": {
                "operationId": "getAgent",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The agent",
                        "schema": {
                            "$ref": "#/definitions/AgentDetail"
                        }
                    }
                },
                "summary": "Returns the details of an agent",
                "tags": [
                    "agent"
                ]
            }
        },
        "/agent/{agent_id}/connection/consumption": {
            "get": {
                "operationId": "getConnectionConsumption",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConnectionConsumption"
                        }
                    }
                },
                "summary": "Get the connection consumption on the given agent",
                "tags": [
                    "agent"
                ]
            }
        },
        "/agent/{agent_id}/connection/vpn-session": {
            "get": {
                "operationId": "getAgentVPNActiveConnections",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Agent VPN Connection information",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgentVPNActiveConnection"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get the Active VPN connections for the `agent`",
                "tags": [
                    "agent"
                ]
            }
        },
        "/agent/{agent_id}/device": {
            "get": {
                "operationId": "listDevices",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Whether to include hidden devices in the returned list",
                        "in": "query",
                        "name": "show_hidden",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of all devices in the Agent's monitored networks",
                        "schema": {
                            "items": {},
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns all the devices of an agent",
                "tags": [
                    "device"
                ]
            }
        },
        "/agent/{agent_id}/device/eye/snmp": {
            "get": {
                "operationId": "listAgentEyesSNMP",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of configured SNMP Domotz Sensors on the agent",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SNMPDomotzAgentEye"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Retrieves the list of configured SNMP Domotz Sensors on the agent",
                "tags": [
                    "SNMP/TCP SENSORS"
                ]
            }
        },
        "/agent/{agent_id}/device/eye/tcp": {
            "get": {
                "operationId": "listAgentEyesTCP",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of configured TCP Domotz Sensors on the agent and their latest values",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TCPDomotzEye"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Retrieves the list of configured TCP Domotz Sensors on the agent",
                "tags": [
                    "SNMP/TCP SENSORS"
                ]
            }
        },
        "/agent/{agent_id}/device/rtd": {
            "get": {
                "operationId": "getAgentRTDStats",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Devices RTD Statistics",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeviceRTDStatistics"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the Round Trip Delay statistics for all devices monitored by the agent. The aggregate values of _avg_min_, _avg_max_, _avg_median_ help to understand the baseline response time of a device in a weekly time frame, while _latest_median_ helps detecting a possible deviation from the baseline",
                "tags": [
                    "metrics"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}": {
            "get": {
                "operationId": "getDevice",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "An object containing the device details",
                        "schema": {}
                    }
                },
                "summary": "Returns the details of a device",
                "tags": [
                    "device"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/action/power": {
            "get": {
                "operationId": "getDevicePowerActions",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Returns a JSON object indicating the current availability of each power action on the device ",
                        "schema": {
                            "$ref": "#/definitions/DevicePowerAction"
                        }
                    }
                },
                "summary": "Returns the power management actions available on the device at the current moment.See <a href='#schemadevicepoweraction'> DevicePowerAction </a> schema for further details.",
                "tags": [
                    "device"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/application": {
            "get": {
                "operationId": "listDeviceApplications",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 100,
                        "description": "The maximum number of items to return. Min value is 1. Max value is 1000. Default value is 100",
                        "format": "int32",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 1,
                        "name": "page_size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The requested page number, 0-indexed. Default value is 0",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "page_number",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of applications of the device",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeviceApplicationField"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Retrieves the list of applications of the device. The feature is only available on agents having the Booster Pack",
                "tags": [
                    "device"
                ]
            },
            "head": {
                "operationId": "countDeviceApplications",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Returns the application count",
                        "headers": {
                            "X-Entities-Count": {
                                "description": "Returns the application count",
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "summary": "Counts the applications",
                "tags": [
                    "device"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/eye/snmp": {
            "get": {
                "operationId": "listEyesSNMP",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of configured SNMP Domotz Sensors for the device and their latest values",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SNMPDomotzEye"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Retrieves the list of configured SNMP Domotz Sensors",
                "tags": [
                    "SNMP/TCP SENSORS"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/eye/snmp/{sensor_id}/function": {
            "get": {
                "operationId": "listEyesSNMPTriggerFunction",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "SNMP Sensor ID",
                        "format": "int32",
                        "in": "path",
                        "name": "sensor_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of functions that can be used by the trigger",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SNMPDomotzEyeTriggerFunction"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Retrieves the list of functions for the SNMP trigger Domotz Sensors",
                "tags": [
                    "SNMP/TCP SENSORS"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/eye/snmp/{sensor_id}/history": {
            "get": {
                "operationId": "getEyesSNMPHistory",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "SNMP Sensor ID",
                        "format": "int32",
                        "in": "path",
                        "name": "sensor_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of SNMP Domotz Sensors samples",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeviceEyeSNMPHistorySample"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the time series of the SNMP Domotz Sensors collected samples",
                "tags": [
                    "SNMP/TCP SENSORS"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/eye/snmp/{sensor_id}/trigger": {
            "get": {
                "operationId": "listEyesSNMPTrigger",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "SNMP Sensor ID",
                        "format": "int32",
                        "in": "path",
                        "name": "sensor_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of triggers associated to the sensor",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SNMPDomotzEyeTrigger"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Retrieves the list of triggers for the SNMP Sensor",
                "tags": [
                    "SNMP/TCP SENSORS"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/eye/tcp": {
            "get": {
                "operationId": "listEyesTCP",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of configured TCP Domotz Sensors for the device and their latest values",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TCPDomotzEye"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Retrieves the list of configured TCP Domotz Sensors",
                "tags": [
                    "SNMP/TCP SENSORS"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/history/network/event": {
            "get": {
                "operationId": "getDeviceStatusHistory",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A time series",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeviceHistory"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the time series of the state changes of the device",
                "tags": [
                    "metrics"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/history/rtd": {
            "get": {
                "operationId": "getDeviceRTDHistory",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Device RTD History",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeviceRTDHistorySample"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the Round Trip Delay history for the device. Each item represents the statistical aggregate of a set of Round Trip Delay measurements",
                "tags": [
                    "metrics"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/inventory": {
            "get": {
                "operationId": "getDeviceInventory",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The device's inventory, with the fields sorted alphabetically. Not set fields will be null",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeviceInventoryField"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the device's inventory data",
                "tags": [
                    "inventory"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/snmp-authentication": {
            "get": {
                "operationId": "getSNMPAuthentication",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The SNMP authentication info for the device",
                        "schema": {
                            "$ref": "#/definitions/SNMPDomotzAuthentication"
                        }
                    }
                },
                "summary": "Retrieves the SNMP authentication info",
                "tags": [
                    "device"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/uptime": {
            "get": {
                "operationId": "getDeviceUptime",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The uptime of the device",
                        "schema": {
                            "$ref": "#/definitions/DeviceUptime"
                        }
                    }
                },
                "summary": "Returns the uptime of the device",
                "tags": [
                    "metrics"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/variable": {
            "get": {
                "operationId": "listDeviceVariables",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "default": 100,
                        "description": "The maximum number of items to return. Min value is 1. Max value is 1000. Default value is 100",
                        "format": "int32",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 1,
                        "name": "page_size",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "default": 0,
                        "description": "The requested page number, 0-indexed. Default value is 0",
                        "format": "int32",
                        "in": "query",
                        "minimum": 0,
                        "name": "page_number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Allows filtering by `value`",
                        "in": "query",
                        "name": "value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows filtering by `path`",
                        "in": "query",
                        "name": "path",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows ordering by `path`, `id`, `value`, `label`, `value_update_time`, `creation_time`",
                        "enum": [
                            "path",
                            "id",
                            "value",
                            "label",
                            "value_update_time",
                            "creation_time"
                        ],
                        "in": "query",
                        "name": "sort_by",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The default is `asc`",
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "in": "query",
                        "name": "sorting_direction",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows filtering by `has_history` field",
                        "in": "query",
                        "name": "has_history",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of device variables",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeviceVariable"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Retrieves the list of device variables",
                "tags": [
                    "variables"
                ]
            },
            "head": {
                "operationId": "countDeviceVariables",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Allows filtering by `value`",
                        "in": "query",
                        "name": "value",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows filtering by `path`",
                        "in": "query",
                        "name": "path",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Allows filtering by `has_history` field",
                        "in": "query",
                        "name": "has_history",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The device variables count",
                        "headers": {
                            "X-Entities-Count": {
                                "description": "The device variables count",
                                "format": "int32",
                                "type": "integer"
                            }
                        }
                    }
                },
                "summary": "Returns device variables count",
                "tags": [
                    "variables"
                ]
            }
        },
        "/agent/{agent_id}/device/{device_id}/variable/{variable_id}/history": {
            "get": {
                "operationId": "getVariableHistory",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Device ID",
                        "format": "int32",
                        "in": "path",
                        "name": "device_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "Variable ID",
                        "format": "int32",
                        "in": "path",
                        "name": "variable_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The variable's history, a list of dictionaries, each composed by the timestamp (a datetime) and the value (a string)",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/VariableHistorySample"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the variable history",
                "tags": [
                    "variables"
                ]
            }
        },
        "/agent/{agent_id}/eye-statistics": {
            "get": {
                "operationId": "eyesUsageInfo",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A data structure containing information about current Domotz Sensors usage and limits",
                        "schema": {
                            "$ref": "#/definitions/DomotzEyesUsageInformation"
                        }
                    }
                },
                "summary": "Retrieves information about Domotz Sensors usage and limits",
                "tags": [
                    "SNMP/TCP SENSORS"
                ]
            }
        },
        "/agent/{agent_id}/history/network/event": {
            "get": {
                "operationId": "getAgentStatusHistory",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A time series",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AgentHistory"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the time series of the state changes of the agent",
                "tags": [
                    "metrics"
                ]
            }
        },
        "/agent/{agent_id}/history/network/speed": {
            "get": {
                "operationId": "getSpeedTestHistory",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A time series",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/NetworkSpeedSample"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the time series of the Internet Speed measurements taken from the agent, both in \ndownload and in upload.",
                "tags": [
                    "metrics"
                ]
            }
        },
        "/agent/{agent_id}/network-topology": {
            "get": {
                "operationId": "getNetworkTopology",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetworkTopology"
                        }
                    }
                },
                "summary": "Returns the agent's network topology",
                "tags": [
                    "topology"
                ]
            }
        },
        "/agent/{agent_id}/network/interfaces": {
            "get": {
                "operationId": "getAgentInterfaces",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The networks monitored by the agent",
                        "schema": {
                            "$ref": "#/definitions/AllAgentInterfaces"
                        }
                    }
                },
                "summary": "Returns the networks monitored by the agent",
                "tags": [
                    "networking"
                ]
            }
        },
        "/agent/{agent_id}/network/interfaces-policy": {
            "get": {
                "operationId": "getAgentInterfacesPolicy",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The current network interface filtering policy",
                        "schema": {
                            "$ref": "#/definitions/AgentInterfacesPolicy"
                        }
                    }
                },
                "summary": "Returns the current network interface filtering policy. The interfaces policy defines the set of interfaces which will be ignored (`deny`) or scanned (`allow`) by the agent. The default behavior is to scan all available interfaces",
                "tags": [
                    "networking"
                ]
            }
        },
        "/agent/{agent_id}/network/ip-scan-policy": {
            "get": {
                "operationId": "getAgentIPScanPolicy",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The IP scan policy.",
                        "schema": {
                            "$ref": "#/definitions/AgentIPScanPolicy"
                        }
                    }
                },
                "summary": "Returns the current IP addresses management policy. A set of IP addresses to be always scanned can be specified in the `forced_ip_addresses` array. ",
                "tags": [
                    "networking"
                ]
            }
        },
        "/agent/{agent_id}/uptime": {
            "get": {
                "operationId": "getAgentUptime",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "description": "The start time of the time series. Default value is one week",
                        "in": "query",
                        "name": "from",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "The end time of the time series. Default value is now",
                        "in": "query",
                        "name": "to",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The uptime of the agent",
                        "schema": {
                            "$ref": "#/definitions/AgentUptime"
                        }
                    }
                },
                "summary": "Returns the uptime of the agent",
                "tags": [
                    "metrics"
                ]
            }
        },
        "/alert-profile": {
            "get": {
                "operationId": "getAlertProfiles2",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of configured alert profiles",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AlertProfile"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the list of configured alert profiles. You can configure alert profiles on the Domotz Portal. Alert profiles define the association between a list of events and a notification channel (email, webhook or slack)",
                "tags": [
                    "alert profiles"
                ]
            }
        },
        "/alert-profile/binding/agent/{agent_id}": {
            "get": {
                "operationId": "getAgentAlertProfile",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The alert profile bindings of an agent",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AlertProfileAgentBinding"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get the alert profile bindings of an agent",
                "tags": [
                    "alert profiles"
                ]
            }
        },
        "/alert-profile/binding/agent/{agent_id}/device": {
            "get": {
                "operationId": "getDevicesAlertProfile",
                "parameters": [
                    {
                        "description": "Agent ID",
                        "format": "int32",
                        "in": "path",
                        "name": "agent_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The alert profile bindings for all devices of the agent",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/AlertProfileDeviceBinding"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Get the alert profile bindings of the devices of an agent",
                "tags": [
                    "alert profiles"
                ]
            }
        },
        "/area": {
            "get": {
                "operationId": "listAreas",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of all the areas in the User's Company",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Area"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns all the areas of a Company",
                "tags": [
                    "company"
                ]
            }
        },
        "/area/{area_id}/team": {
            "get": {
                "operationId": "listTeams",
                "parameters": [
                    {
                        "description": "Area ID",
                        "format": "int32",
                        "in": "path",
                        "name": "area_id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The list of all the teams in a Company Area's",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Team"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns all the teams of an Area",
                "tags": [
                    "company"
                ]
            }
        },
        "/inventory": {
            "get": {
                "operationId": "getInventory",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The inventory fields, sorted by creation time",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/InventoryField"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Enumerates all the Inventory fields",
                "tags": [
                    "inventory"
                ]
            }
        },
        "/meta/usage": {
            "get": {
                "operationId": "apiUsageInfo",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "A data structure containing information about current API usage and usage limits",
                        "schema": {
                            "$ref": "#/definitions/APIUsageInformation"
                        }
                    }
                },
                "summary": "Retrieves information about API usage and limits",
                "tags": [
                    "meta"
                ]
            }
        },
        "/type/device/base": {
            "get": {
                "operationId": "listDeviceBaseTypes",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The types list",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DeviceBaseType"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the device types list",
                "tags": [
                    "assets"
                ]
            }
        },
        "/type/device/detected": {
            "get": {
                "operationId": "listDeviceDetectedTypes",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The types list",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DetectedDeviceType"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Returns the detected device types list",
                "tags": [
                    "assets"
                ]
            }
        },
        "/user": {
            "get": {
                "operationId": "getUser",
                "parameters": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "The user",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "Returns the User information",
                "tags": [
                    "user"
                ]
            }
        }
    },
    "schemes": [
        "https"
    ],
    "security": [
        {
            "api_key": []
        }
    ],
    "securityDefinitions": {
        "api_key": {
            "description": "Get you API Key from the <a href=\"https://portal.domotz.com/portal/settings/services?selected_menu=api_keys\">Domotz Portal</a> or contact us",
            "in": "header",
            "name": "X-Api-Key",
            "type": "apiKey"
        }
    },
    "swagger": "2.0",
    "x-components": {}
}
